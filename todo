STALE INDEXES

- why don't names show up after upgrading backinks (or other ssb deps?)?
- how do we force re-creation of the affected indexes?

CAPS

requesting thumbnails from the thumbnail server should be reserved for the bootmenu, becuase it leaks information about what apps are installed/which identities are controlled by the same person.

Solition: a random string (thumbnail caps) is prefixed to the multiblob-http route. Apps get this as the thumbnail or avatar caps via sessionStorage/

There's a file permissions.json that defines which apps (revRoot) have which caps.

"%8yrd...": {
  "open-app": true,
  "thumbnails": true
}

HTTPS

use https throughout BoP
- ssb-ws
- multiblob-http
- tre-boot / BoP plugins

How to install a self-signed non-expiring https certificate in Electron?
How to use client certificates in Electron?

STABILITY

Make a click tests that uses two blob-based apps. The first one uses openApp to open the 2nd one (an app using sandviews) twice. Then the two tabs are closed. (this currently causes BoP to hang)

This requires a script to automate network creation.
This requires 'tre rpc' 
tre-apps-deploy should not require root or webapps branch. It uses them if present.




======= old

## About deprecation warnings
- Buffer c'tor: used by some older modules that we indirectly depend on.
  We could patch these modules after `npm i` and send PRs upstream.
- ssb-friends: ssb-friends seems to use its own lecacy method from within its init function!

- implement pull-puppeteer-source
  - it could listen for an event that signals
    availability of the exposed read function
  Update: we dont want to use exposeFunction.
  Apart from that, a puppeteer bug gets in the way:
  - a reace condtion between CDP backend and page.js
    collide in global namespace. if the backend wins, a low-level
    native function overwrites page.js' bind function wrapper and things break.

- use it to reflect sbot log to about page
- [x] use it to reflect console messages to webapps using original obects (jshandle)
  we did that by firing a custom event on window

- implement pull-pupeteer-sink
  - takes a read function that is evaled in the browser

- have a muxrpc session across a duplex stream

- add multi-server plugin, transport via CDP session

- [x] rename about page to launch page
- add tab bar to about page

- split plugin into atomic aspects
- launch: openApp
  serve lauinch page

- prepare PR against puppeteer
  - does the problem show in puppeteer;s own chromium?
  - future frames dont get the exposed function
  - reace conidtion between CDP backend and evalOnNewDoc

- pepare pR against multi-server
  sessions connected to members of `master` should not time out.
